{"filter":false,"title":"test_models.py","tooltip":"/todo/test_models.py","undoManager":{"mark":2,"position":2,"stack":[[{"start":{"row":0,"column":0},"end":{"row":16,"column":34},"action":"insert","lines":["from django.test import TestCase","from .models import Item","","","class TestItemModel(TestCase):","","    def test_done_defaults_to_False(self):","        item = Item(name=\"Create a Test\")","        item.save()","        self.assertEqual(item.name, \"Create a Test\")","        self.assertFalse(item.done)","    ","    def test_can_create_an_item_with_a_name_and_status(self):","        item = Item(name=\"Create a Test\", done=True)","        item.save()","        self.assertEqual(item.name, \"Create a Test\")","        self.assertTrue(item.done)"],"id":1}],[{"start":{"row":0,"column":0},"end":{"row":16,"column":34},"action":"remove","lines":["from django.test import TestCase","from .models import Item","","","class TestItemModel(TestCase):","","    def test_done_defaults_to_False(self):","        item = Item(name=\"Create a Test\")","        item.save()","        self.assertEqual(item.name, \"Create a Test\")","        self.assertFalse(item.done)","    ","    def test_can_create_an_item_with_a_name_and_status(self):","        item = Item(name=\"Create a Test\", done=True)","        item.save()","        self.assertEqual(item.name, \"Create a Test\")","        self.assertTrue(item.done)"],"id":2},{"start":{"row":0,"column":0},"end":{"row":21,"column":52},"action":"insert","lines":["Learn more or give us feedback","from django.test import TestCase","from .models import Item","","","class TestItemModel(TestCase):","","    def test_done_defaults_to_False(self):","        item = Item(name=\"Create a Test\")","        item.save()","        self.assertEqual(item.name, \"Create a Test\")","        self.assertFalse(item.done)","    ","    def test_can_create_an_item_with_a_name_and_status(self):","        item = Item(name=\"Create a Test\", done=True)","        item.save()","        self.assertEqual(item.name, \"Create a Test\")","        self.assertTrue(item.done)","    ","    def test_item_as_a_string(self):","        item = Item(name=\"Create a Test\")","        self.assertEqual(\"Create a Test\", str(item))"]}],[{"start":{"row":0,"column":0},"end":{"row":0,"column":30},"action":"remove","lines":["Learn more or give us feedback"],"id":3},{"start":{"row":0,"column":0},"end":{"row":1,"column":0},"action":"remove","lines":["",""]}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":7,"column":41},"end":{"row":7,"column":41},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1583162052102,"hash":"9450003b14097030ae683bb274e3a7000f162826"}